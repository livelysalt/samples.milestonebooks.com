// layers
$layer-alerts: 99;
$layer-the-nav: 90;
$layer-title: 50;

// sizes
$base-size: 10px;
$unit: 4em;
$radius: .5em;
$list-font-size: 1.6em;
$list-padding: .5em;
$sheet-music-width: 650px;
$zoom-ratio: 120 / 80; // match settings.js > ZOOM_RATIO

// colors
$alert-color: hsl(0, 100%, 50%);
$alert-bg-color: lighten($alert-color, 40%);
$background-color: hsl(0, 0%, 95%);
$controls-color: black;
$controls-bg-color: white;
$disabled-color: lighten($controls-color, 90%);
$theme-color: hsl(22, 85%, 43%);
$focus-color: $theme-color;
$focus-bg-color: lighten($disabled-color, 5%);
$list-bg-color: lighten($disabled-color, 5%);
$list-current-bg-color: $list-bg-color; // hsl(60, 100%, 95%);
$list-item-border-color: $disabled-color;
$list-item-border-focus-color: darken($list-item-border-color, 15%);

$list-shadow: 0 0 1em transparentize(darken($disabled-color, 75%), .5);

// timings
$transition-time: .25s; // match settings.js > TRANSITION_TIME_MS

// functions

// adapted from <https://gist.github.com/tqc/2564280>
@function colorConvertAlpha($colorA, $colorB:white) {
  $hA: hue($colorA);
  $sA: saturation($colorA);
  $lA: lightness($colorA);
  $a: alpha($colorA);
  $hB: hue($colorB);
  $sB: saturation($colorB);
  $lB: lightness($colorB);
  $h: round(((1 - $a) * $hB) + ($a * $hA));
  $s: round(((1 - $a) * $sB) + ($a * $sA));
  $l: round(((1 - $a) * $lB) + ($a * $lA));
  @return hsl($h, $s, $l);
}

// mixins

@mixin short-transition() {
  transition: all $transition-time ease-in-out;
}

@mixin drop-shadow() {
  box-shadow: 0 0 1em transparentize(darken($background-color, 75%), .5);
}

@mixin one-line-ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin absolute-center($axis:xy, $position:absolute) {
  position: if($axis == fixed, fixed, $position);
  @if ($axis == xy or $axis == fixed) {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
  @if ($axis == x) {
    left: 50%;
    transform: translateX(-50%);
  }
  @if ($axis == y) {
    top: 50%;
    transform: translateY(-50%);
  }
}

@mixin below-sheet-music-min() {
  @media (max-width: #{$sheet-music-width - 1px}) {
    @content;
  }
}

@mixin sheet-music-min {
  @media (min-width: #{$sheet-music-width}) {
    @content;
  }
}

@mixin base_styling() {
  html {
    font-size: $base-size;
    font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
    min-height: 100%;
    background-color: $background-color;
    overflow-y: scroll; // always on to avoid possible jank when toggling playlist
  }

  // applied to certain elements (e.g. buttons with translated contents) to make Edge consistent with Chrome & Firefox, i.e., avoid flipping translate() values
  .ltr {
    direction: ltr;
  }

  .btn {
    background: none;
    border: none;
    box-sizing: content-box;
    padding: 0;
    width: $unit;
    height: $unit;
    overflow: hidden;
    @include absolute-center(y);
    @include short-transition;

    &:disabled {
      color: $disabled-color;
    }
  }


  .controls {
    width: 100%;
    height: 100%;

    .btn {
      &::before {
        content: '';
        position: absolute;
        background-color: $focus-bg-color;
        left: 50%;
        top: 50%;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        @include short-transition;
        transform: translate(-50%, -50%) scale(0);

        @at-root .controls .btn:focus::before {
          transform: translate(-50%, -50%) scale(1);
        }
      }

      &:not(:disabled) {
        cursor: pointer;
        color: $controls-color;

        &:focus,
        &:hover {
          color: $focus-color;
        }
      }
    }
  } // .controls

}
